#include "WiFi.h"
#include "HTTPClient.h"
#include <ArduinoJson.h>

// === CONFIGURACI√ìN ===
const char* ssid = "";
const char* password = "";
const String BOT_TOKEN = ""; // Tu token
const String CHAT_ID = ""; // Tu chat ID

const int pirPin = 13;       // Pin del sensor PIR
const int alarmPin = 4;      // Pin para activar la alarma (conectado a la base del transistor)
bool motionDetected = false;

// === FUNCION DE CODIFICACION URL ===
String urlEncodeUTF8(String str) {
  String encoded = "";
  char c;
  char code0;
  char code1;
  for (int i = 0; i < str.length(); i++) {
    c = str.charAt(i);
    if (c == ' ') {
      encoded += '+';
    } else if (isalnum(c)) {
      encoded += c;
    } else {
      code1 = (c & 0xf) + '0';
      code0 = ((c >> 4) & 0xf);
      code0 += code0 > 9 ? 'A' - 10 : '0';
      encoded += '%';
      encoded += code0;
      encoded += code1;
    }
  }
  return encoded;
}
// === URL TELEGRAM ===
String telegramAlertURL(String message) {
  String encodedMessage = urlEncodeUTF8(message);
  return "https://api.telegram.org/bot" + BOT_TOKEN + "/sendMessage?chat_id=" + CHAT_ID + "&text=" + encodedMessage;
}

// === ENV√çO DE MENSAJE ===
void sendTelegramAlert(String msg) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    String url = telegramAlertURL(msg);

    http.begin(url);
    int httpCode = http.GET();

    if (httpCode > 0) {
      if (httpCode == HTTP_CODE_OK) {
        Serial.println("‚úÖ Mensaje enviado a Telegram");
      } else {
        Serial.println("‚ùå Error HTTP: " + String(httpCode));
      }
    } else {
      Serial.println("üö´ Error al conectar con Telegram: " + String(httpCode));
    }
    http.end();
  } else {
    Serial.println("‚ö†Ô∏è Sin conexi√≥n WiFi");
  }
}

// === SETUP ===
void setup() {
  pinMode(pirPin, INPUT);
  pinMode(alarmPin, OUTPUT);
  digitalWrite(alarmPin, LOW); // Iniciar apagado

  Serial.begin(115200);

  WiFi.begin(ssid, password);
  Serial.print("Conectando a WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\n‚úÖ Conectado a WiFi");
  Serial.println("IP asignada: " + WiFi.localIP().toString());
}

// === LOOP ===
void loop() {
  int pirValue = digitalRead(pirPin);

  if (pirValue == HIGH && !motionDetected) {
    Serial.println("üö® Movimiento detectado!");

    // Activamos la alarma f√≠sica
    digitalWrite(alarmPin, HIGH);
    Serial.println("üîä Alarma activada");

    // Enviamos mensaje a Telegram
    sendTelegramAlert("¬°Alerta de movimiento detectado!");

    motionDetected = true;

    // Opcional: esperar antes de enviar otro mensaje y mantener la alarma activa
    delay(3000); // 30 segundos de alarma activa
    digitalWrite(alarmPin, LOW); // Apagar alarma despu√©s de tiempo
  }

  if (pirValue == LOW && motionDetected) {
    Serial.println("No hay movimiento.");
    motionDetected = false;
  }

  delay(100); // Anti-rebote del sensor
}
